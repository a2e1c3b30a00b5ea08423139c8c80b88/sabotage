--- a/src/libmodplug/modplug.c
+++ b/src/libmodplug/modplug.c
@@ -100,12 +100,16 @@
 	}
 }
 
+static long mmfile_left(MMFILE *mmfile) { return mmfile->sz - mmfile->pos; }
+
 void mmreadUBYTES(BYTE *buf, long sz, MMFILE *mmfile)
 {
 	int sztr = sz;
 	// do not overread.
-	if (sz > mmfile->sz - mmfile->pos)
-		sztr = mmfile->sz - mmfile->pos;
+	long left = mmfile_left(mmfile);
+        if(left <= 0 || sz <= 0) return;
+	if (sz > left)
+		sztr = left;
 	SDL_memcpy(buf, &mmfile->mm[mmfile->pos], sztr);
 	mmfile->pos += sz;
 	// if truncated read, populate the rest of the array with zeros.
@@ -116,8 +120,10 @@
 void mmreadSBYTES(char *buf, long sz, MMFILE *mmfile)
 {
 	// do not overread.
-	if (sz > mmfile->sz - mmfile->pos)
-		sz = mmfile->sz - mmfile->pos;
+	long left = mmfile_left(mmfile);
+        if(left <= 0 || sz <= 0) return;
+	if (sz > left)
+		sz = left;
 	SDL_memcpy(buf, &mmfile->mm[mmfile->pos], sz);
 	mmfile->pos += sz;
 }
@@ -125,6 +131,7 @@
 BYTE mmreadUBYTE(MMFILE *mmfile)
 {
 	BYTE b;
+	if(mmfile_left(mmfile) <= 0) return 0;
 	b = (BYTE)mmfile->mm[mmfile->pos];
 	mmfile->pos++;
 	return b;
--- a/src/libmodplug/load_mid.c
+++ b/src/libmodplug/load_mid.c
@@ -1135,7 +1135,7 @@
 		if (mm.sz < miditracklen) continue;
 		runningstatus = 0;
 		if( t && h->midiformat == 1 ) mid_rewind_tracks(h); // tracks sound simultaneously
-		while( miditracklen > 0 ) {
+		while( miditracklen > 0 && !mmfeof(h->mmf)) {
 			miditracklen -= mid_read_delta(h);
 			midibyte[0] = mid_read_byte(h);
 			miditracklen--;
