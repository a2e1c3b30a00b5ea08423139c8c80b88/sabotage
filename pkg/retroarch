[mirrors]
https://github.com/libretro/RetroArch/releases/download/v1.20.0/retroarch-sourceonly-1.20.0.tar.xz

[vars]
filesize=11616548
sha512=2ff092347f77ad62ee3d083a3815f45409817c1e4ff61dda3654aa3a54db9973369970f88c0ba302f5ab722af0eec31625a053e8ef7d05d19b6c390c25eae18b
pkgver=1
dbver=7c8a7888
infover=e23f59ea

[deps]
mesalib
libxscrnsaver
sdl2
zlib
xz
libpng
alsa-lib
libressl
freetype
fontconfig
retroarch-assets-ozone-tarball
retroarch-assets-xmb-monochrome-tarball
retroarch-core-info-tarball
retroarch-database-rdb-tarball

[deps.host]
pkgconf

[build]
patch -p1 < "$K"/retroarch-xinitthreads.patch
[ -z "$butch_prefix" ] && butch_prefix=/

CPPFLAGS="-D_GNU_SOURCE" CFLAGS="$optcflags -I$PWD/deps/glslang" \
CXXFLAGS="$optcflags -I$PWD/deps/glslang" \
LDFLAGS="$optldflags -Wl,-rpath-link=$butch_root_dir$butch_prefix/lib" \
  ./configure --prefix="$butch_prefix" \
  --enable-builtinglslang \
  --disable-online_updater \
  --disable-discord

make V=1 -j$MAKE_THREADS
make DESTDIR="$butch_install_dir" install

[ "$butch_prefix" = / ] && butch_prefix=

# install the bare minimum of assets to have usable guis.
# without the icons navigation is pretty much impossible.
# the full assets download is > 500mb and ships with all
# sorts of childish wallpapers, random junk, and hundreds
# of themes.
dest="$butch_install_dir""$butch_prefix"
( cd "$dest"
  mkdir -p share/libretro/assets
  cd share/libretro/assets
  for i in ozone xmb-monochrome ; do
   tar xf "$C"/retroarch-assets-"$i".tar.bz2
   mv retroarch-assets-v1.18.0-"$i"/* .
   rm -rf retroarch-assets-v1.18.0-"$i"
  done
)
( cd "$dest"
  # most or all libretro cores actually don't transfer all required info -
  # especially the targeted console - to the frontend, so as a core
  # author you actually need to file a separate PR adding the metadata
  # into a separate repo, from where the info database is generated by
  # a buildbot. without that db retroarch doesn't grok that e.g. mGBA
  # is a gameboy advance emulator, even though the core registers the
  # .gba file extension.
  mkdir -p share/libretro/info
  cd share/libretro/info
  tar xf "$C"/retroarch-core-info-$infover.tar.bz2
  mv libretro-super-$infover-dist-info/dist/info/* .
  rm -rf libretro-super-$infover-dist-info
)
( cd "$dest"
  # without the rdb database containing hashes of all known no-intro
  # and similar romsets, the frontend actually doesn't detect that
  # "pokemon firered.gba" is actually a gba title, so without the
  # db you'll never get a gba game list, instead you have create
  # a manual playlist and associate it with a core.

  # since we already download all other junk, let's just download
  # the cheats too, so at least *something* useful is actually
  # being installed.
  mkdir -p share/libretro/database
  cd share/libretro/database
  for i in rdb ; do
   mkdir -p $i
   cd $i
   tar xf "$C"/retroarch-database-$i-$dbver.tar.bz2
   mv libretro-database-$dbver-*/*/* .
   rm -rf libretro-database-$dbver-*
   cd ..
  done
)

patch_cfg() {
sed -e 's@# '"$1"' =.*@'"$1"' = '"$butch_prefix""$2"'@' -i etc/retroarch.cfg
}
( cd "$dest"
patch_cfg assets_directory /share/libretro/assets
patch_cfg libretro_info_path /share/libretro/info
patch_cfg libretro_directory /lib/libretro
patch_cfg content_database_path /share/libretro/database/rdb
patch_cfg cheat_database_path /share/libretro/database/cheat
)
